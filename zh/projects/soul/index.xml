<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Soul on dromara(Open source organization)</title><link>/zh/projects/soul/</link><description>Recent content in Soul on dromara(Open source organization)</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="/zh/projects/soul/index.xml" rel="self" type="application/rss+xml"/><item><title>context-path-mapping插件</title><link>/zh/projects/soul/context-path-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/context-path-plugin/</guid><description>说明 soul网关在对目标服务调用的时候，还容许用户使用 context_path 插件来重写请求路径的contextPath 插件设置 在 soul-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; context_path 设置为开启。 在网</description></item><item><title>divide插件</title><link>/zh/projects/soul/divide-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/divide-plugin/</guid><description>说明 divide插件是网关处理 http协议请求的核心处理插件。 插件设置 开启插件，soul-admin &amp;ndash;&amp;gt; 插件管理&amp;ndash;&amp;gt; divide 设置为</description></item><item><title>dubbo接入soul网关</title><link>/zh/projects/soul/dubbo-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/dubbo-proxy/</guid><description>说明 此篇文章是dubbo用户使用dubbo插件支持，以及自己的dubbo服务接入soul网关的教程。 支持 alibaba dubbo（&amp;lt; 2.7.x） 以</description></item><item><title>dubbo插件</title><link>/zh/projects/soul/dubbo-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/dubbo-plugin/</guid><description>说明 dubbo插件是将http协议 转换成dubbo协议 的插件，也是网关实现dubbo泛化调用的关键。 dubbo插件需要配合元数据才能实现du</description></item><item><title>filter扩展</title><link>/zh/projects/soul/custom-filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/custom-filter/</guid><description>说明 本文是说明如何进行 org.springframework.web.server.WebFliter 的扩展。 跨域支持 新增 org.dromara.soul.bootstrap.cors.CrossFilter 实现 WebFilter。 public class CrossFilter implements WebFilter { private static final String ALLOWED_HEADERS = &amp;quot;x-requested-with, authorization, Content-Type, Authorization, credential, X-XSRF-TOKEN,token,username,client&amp;quot;; private static final String ALLOWED_METHODS = &amp;quot;*&amp;quot;; private static final String ALLOWED_ORIGIN = &amp;quot;*&amp;quot;; private static final</description></item><item><title>http用户</title><link>/zh/projects/soul/http-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/http-proxy/</guid><description>说明 本文旨在帮助http用户。 soul网关使用 divide 插件来处理http请求。请求在soul-admin后台开启它。 接入前，请正确的启动 soul-</description></item><item><title>hystrix插件</title><link>/zh/projects/soul/hystrix-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/hystrix-plugin/</guid><description>说明 hystrix插件是网关用来对流量进行熔断的核心实现。 使用信号量的方式来处理请求。 插件设置 在 soul-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; hystrix，设置为开启。 如</description></item><item><title>monitor插件</title><link>/zh/projects/soul/monitor-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/monitor-plugin/</guid><description>说明 monitor插件是网关用来监控自身运行状态（JVM相关），请求的响应迟延，QPS、TPS等相关metrics。 技术方案 流程图 异步或者同</description></item><item><title>rateLimiter插件</title><link>/zh/projects/soul/rate-limiter-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/rate-limiter-plugin/</guid><description>说明 限流插件，是网关对流量管控限制核心的实现。 可以到接口级别，也可以到参数级别，具体怎么用，还得看你对流量配置。 技术方案 采用redis令牌桶</description></item><item><title>resilience4j插件</title><link>/zh/projects/soul/resilience4j-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/resilience4j-plugin/</guid><description>说明 resilience4j插件是网关用来对流量进行限流与熔断的可选选择之一。 resilience4j为网关熔断限流提供能力。 插件设置 在 soul-admin &amp;ndash;&amp;gt;</description></item><item><title>rewrite插件</title><link>/zh/projects/soul/rewrite-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/rewrite-plugin/</guid><description>说明 soul网关在对目标服务进行代理调用的时候，还容许用户使用 rewrite 插件来重写请求路径 插件设置 在 soul-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; rewrite，设置为开启。 在网关</description></item><item><title>sentinel插件</title><link>/zh/projects/soul/sentinel-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/sentinel-plugin/</guid><description>说明 sentinel插件是网关用来对流量进行限流与熔断的可选选择之一。 sentinel为网关熔断限流提供能力。 插件设置 在 soul-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; sen</description></item><item><title>sign插件</title><link>/zh/projects/soul/sign-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/sign-plugin/</guid><description>说明 sign插件是 soul网关自带的，用来对请求进行签名认证的插件。 插件设置 在 soul-admin -&amp;gt; 插件管理中 &amp;ndash;&amp;gt; sign插件设置为开启。 插件使用 在网关的 pom.xml 文件</description></item><item><title>sofa接入soul网关</title><link>/zh/projects/soul/sofa-rpc-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/sofa-rpc-proxy/</guid><description>说明 此篇文章是sofa用户使用sofa插件支持，以及自己的sofa服务接入soul网关的教程。 接入前，请正确的启动 soul-admin以及搭</description></item><item><title>sofa插件</title><link>/zh/projects/soul/sofa-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/sofa-plugin/</guid><description>说明 sofa插件是将http协议 转换成sofa协议 的插件，也是网关实现sofa泛化调用的关键。 sofa插件需要配合元数据才能实现dubbo的</description></item><item><title>soul-code-conduct</title><link>/zh/projects/soul/code-conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/code-conduct/</guid><description>开发理念 用心 保持责任心和敬畏心，以工匠精神持续雕琢。 可读 代码无歧义，通过阅读而非调试手段浮现代码意图。 整洁 认同《重构》和《代码整洁之道》的理</description></item><item><title>soul-committer</title><link>/zh/projects/soul/committer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/committer/</guid><description>提交者提名 当你做了很多贡献以后，社区会进行提名。 成为committer你会拥有 soul仓库写的权限 idea 正版使用 提交者责任 开发新功能； 代码重构；</description></item><item><title>soul-contributor</title><link>/zh/projects/soul/contributor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/contributor/</guid><description>您可以报告bug，提交一个新的功能增强建议或者直接对以上内容提交改进补丁。 提交issue 在提交issue之前，请经过充分的搜索，确定该iss</description></item><item><title>soul介绍</title><link>/zh/projects/soul/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/overview/</guid><description>What is the Soul？ 这是一个异步的，高性能的，跨语言的，响应式的API网关。 Features 支持各种语言(http协议)，支持 dubbo，springclou</description></item><item><title>soul性能优化</title><link>/zh/projects/soul/soul-optimize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/soul-optimize/</guid><description>说明 本文主要介绍如果对soul进行优化 本身消耗 soul本身所有的操作，都是基于jvm内存来匹配，本身消耗时间大概在 1-3 ms左右。 底层netty</description></item><item><title>springCloud接入soul网关</title><link>/zh/projects/soul/spring-cloud-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/spring-cloud-proxy/</guid><description>说明 此篇文章是教你如何将springCloud接口，快速接入到soul网关。 请在 soul-admin 后台将 springCloud 插件设置为开启。 接入前，请正确的启动 soul-ad</description></item><item><title>springcloud插件</title><link>/zh/projects/soul/spring-cloud-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/spring-cloud-plugin/</guid><description>说明 该插件是用来将http协议 转成springCloud协议 的核心。 引入网关 springCloud的插件支持 在网关的 pom.xml 文件中引入如下依赖。 &amp;lt;!--soul</description></item><item><title>waf插件</title><link>/zh/projects/soul/waf-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/waf-plugin/</guid><description>说明 waf插件，是网关的用来对流量实现防火墙功能的核心实现。 插件设置 在 soul-admin &amp;ndash;&amp;gt; 插件管理-&amp;gt; waf 设置为开启。 如果用户不想使用此功能，请在adm</description></item><item><title>websocket支持</title><link>/zh/projects/soul/websocket-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/websocket-plugin/</guid><description>说明 soul网关是支持 websocket的代理。 websocket支持中，使用了divide插件。 插件设置 在 soul-admin &amp;ndash;&amp;gt; 插件管理 &amp;ndash;&amp;gt; divide，设置</description></item><item><title>使用不同的数据同步策略</title><link>/zh/projects/soul/use-data-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/use-data-sync/</guid><description>说明 数据同步是指将 soul-admin 配置的数据，同步到 soul 集群中的JVM内存里面，是网关高性能的关键。 实现原理，请看：数据同步。 文中所说的网关，是指你搭建的网</description></item><item><title>元数据概念设计</title><link>/zh/projects/soul/meta-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/meta-data/</guid><description>说明 本篇主要讲解在soul网关中元数据的概念，设计，以及如何对接。 技术方案 在数据库中，新增了一张表，然后通过数据同步的方案，会把这张表的数据</description></item><item><title>团队介绍</title><link>/zh/projects/soul/team/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/team/</guid><description>团队成员（排名不分先后） 名字 github 角色 所在公司 肖宇 yu199195 VP 京东 张永伦 tuohai666 PMC 京东 邓力铭 dengliming PMC 某创业公司 汤煜冬 tydhot PMC perfma 张磊 SaberSola PMC 哈罗 陈斌 prFor PMC 某创业公司 黄晓峰 huangxfchn committer</description></item><item><title>多语言http客户端</title><link>/zh/projects/soul/developer-soul-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/developer-soul-client/</guid><description>说明 本文主要讲解其他语言的http服务如何接入网关。 如何自定义开发 soul-http-client 自定义开发 请求方式：POST 请求路径 http://soul-admin/soul-client/springmvc-register soul-admin，表示为 adm</description></item><item><title>字典管理</title><link>/zh/projects/soul/dictionary-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/dictionary-management/</guid><description>说明 字典管理主要用来维护和管理公用数据字典 表设计 sql CREATE TABLE IF NOT EXISTS `soul_dict` ( `id` varchar(128) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;主键id&#39;, `type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;类型&#39;, `dict_code` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;字典编码</description></item><item><title>插件处理详解</title><link>/zh/projects/soul/plugin-handle-explanation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/plugin-handle-explanation/</guid><description>说明 在soul-admin后台，每个插件都用handle（json格式）字段来表示不同的处理，而插件处理是就是用来管理编辑json里面的自定</description></item><item><title>插件扩展</title><link>/zh/projects/soul/custom-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/custom-plugin/</guid><description>说明 插件是 soul 网关的核心执行者，每个插件在开启的情况下，都会对匹配的流量，进行自己的处理。 在soul 网关里面，插件其实分为2 类： 一类是单一职责</description></item><item><title>数据同步设计</title><link>/zh/projects/soul/data-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/data-sync/</guid><description>说明 本篇主要讲解数据库同步的三种方式，以及原理 前言 网关是流量请求的入口，在微服务架构中承担了非常重要的角色，网关高可用的重要性不言而喻。在使</description></item><item><title>数据库设计</title><link>/zh/projects/soul/database-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/database-design/</guid><description>插件采用数据库设计，来存储插件，选择器，规则配置数据，以及对应关系。 数据库表UML类图: 设计详解: 一个插件对应多个选择器，一个选择器对应多个</description></item><item><title>文件上传下载</title><link>/zh/projects/soul/file-and-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/file-and-image/</guid><description>说明 本文主要介绍soul的文件上传下载的支持。 文件上传 默认限制文件大小为10M。 如果想修改，在启动服务的时候，使用--file.size = 3</description></item><item><title>正确获取Ip与host</title><link>/zh/projects/soul/custom-parsing-ip-and-host/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/custom-parsing-ip-and-host/</guid><description>说明 本文是说明，如果网关前面有一层nginx 的时候，如何获取正确的ip与端口。 获取正确的之后，在插件以及选择器中，可以根据 ip，与host来</description></item><item><title>环境搭建</title><link>/zh/projects/soul/soul-set-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/soul-set-up/</guid><description>说明 soul 2.2.0以后都是基于插件化可插拔的思想，本文是说明如何基于soul搭建属于你自己网关。 请确保你的机器安装了JDK 1.8+，Mysql</description></item><item><title>线程模型</title><link>/zh/projects/soul/thread/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/thread/</guid><description>说明 本文主要介绍soul的线程模型，以及各种场景的使用。 io与work线程 soul内置依赖 spring-webflux 而其底层是使用的netty，这一块只要是使用的n</description></item><item><title>自定义sign插件检验</title><link>/zh/projects/soul/custom-sign-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/custom-sign-algorithm/</guid><description>说明 用户可以自定义签名认证算法来实现验证。 扩展 默认的实现为 org.dromara.soul.plugin.sign.service.Defa</description></item><item><title>自定义网关返回数据格式</title><link>/zh/projects/soul/custom-result/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/custom-result/</guid><description>说明 本文是说明基于soul网关返回自定义的数据个数。 网关需要统一的返回格式，而每个公司都有自己定义的一套，所以需要对次进行扩展。 默认实现 默认</description></item><item><title>选择器规则详解</title><link>/zh/projects/soul/selector-and-rule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/selector-and-rule/</guid><description>说明 选择器和规则是soul网关中最灵魂的东西。掌握好它，你可以对任何流量进行管理。 本篇主要详解soul网关中，选择器与规则的概念，以及如何使</description></item><item><title>配置流程介绍</title><link>/zh/projects/soul/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh/projects/soul/config/</guid><description>说明 本篇是对admin后台操作数据以后，同步到网关的流程介绍。 使用 用户可以在 soul-admin 后台任意修改数据，并马上同步到网关的jvm内存中。 同步soul</description></item></channel></rss>